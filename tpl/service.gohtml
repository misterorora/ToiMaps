<!DOCTYPE html>
<html style="font-size: 16px;" lang="de"><head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta charset="utf-8">
    <meta name="keywords" content="Toimaps">
    <meta name="description" content="">
    <title>Service Toimaps</title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
</head>
<style>
    body { margin:0; padding:0; }
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        max-width: 100%;
    }

    #canva {
        width: 100%;
        height: 100vh;
        background-color: #f0f0f0;
        padding: 0; /* Remove padding */
        margin: 0; /* Remove margin */
        box-sizing: border-box;
        position: relative; /* Add position: relative to establish a positioning context for the #header and #under */
    }

    #under {
        display: flex;
        position: absolute;
        top: 10%;
        width: 100%;
        padding: 0;
        height: 90%;
        background-image: url(../visual/background.jpg);
        justify-content: center;
        align-items: center;
        margin: 0;
        overflow: hidden;
    }
    .centered-frame {
        width: 40%;
        max-width: 40%; /* Optional: set a maximum width */
        height: 100%;
        background-color: #CCC1AF;
        overflow: auto; /* Enable scrolling when content overflows */
        box-sizing: border-box;
        align-self: center;
        padding: 20px; /* Optional: add padding for content inside the frame */
        font-family:system-ui;
    }
    p {
        margin-bottom: 20px; /* Adjust the value as needed */
    }
    #filter{
        margin-left: 22%;
        padding-top: 15px;
    }
    #getCoordinatesButton {
        background-color: #5aa09a; /* Green */
        border: none;
        color: black;
        padding: 15px 32px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        cursor: pointer;
        border-radius: 9px;
        margin-left: 20%;
        margin-top: 15px;
    }
    #input{
        margin-left: 25%;
        margin-top: 5%;
    }



</style>

<body>
<div id='canva'>
    {{template "_header.gohtml" .}}
    <div id = "under">
        <div class="centered-frame">
            <p><h2>Services ToiMaps&nbsp;</h2></p>

            <p><h3>Neue Toilette</h3></p>
            <p>
                <span style="line-height: 2.0;">
                    <p>Haben Sie eine Toilette gefunden, die aber noch nicht abgebildet wird? Kein Problem. Fügen Sie die Toilette einfach selbst hinzu.</p>
                    <p>Hierzu tragen Sie im Feld Toilettenname einfach den gewünschten Namen ein. (Tipp: Nutzen Sie einen Namen, der auch zum Ort passt. Bsp: "Brandenburgen Tor" für eine Toilette am Brandenburger Tor)</p>

                    <p>Danach können Sie noch eine kurze Beschreibung hinzufügen. Dabei können Sie auf Kosten eingehen, den Reinheitsgrad bewerten oder einfach Eindrücke schildern, die Sie bei ihrem letzten Besuch vernommen haben.</p>

                    <p>Bevor Sie die Toilette nun hinzufügen, geben Sie bitte noch die Adresse ein und wählen Sie aus, welche Toiletten vor Ort zur Verfügung stehen.

                </span>
            </p>
            <div id="input">
            <label for="Toilettenname"><strong>Toilettenname: &nbsp;&nbsp;</strong></label>
            <input type="text" name="Toilettenname" id="Toilettenname" maxlength="50"><br><br>
            <label for="Description"> <strong>Beschreibung:</strong></label><br><br>
            <textarea name="Description" id="Description" cols="50" rows="4" placeholder="Beschreibung" style="resize: none;" maxlength="150"></textarea>
            <br>
            <br>
            <label for="addressInput"><strong>Adresse: </strong></label>
            <input id="addressInput" placeholder="Straße Nr, Ort, PLZ" style="margin-left: 10%"><br>

            <div id="filter" style="font-size: 20px">
                <input type="checkbox" name="Male" title="Male" value="Male" id="Male">
                <label for="Male">Pissoir</label><br>
                <input type="checkbox" name="Female" title="Female" value="Female" id="Female">
                <label for="Female">Toilette</label><br>
                <input type="checkbox" name="FLINTA" title="FLINTA" value="FLINTA" id="FLINTA">
                <label for="FLINTA">Missoir</label><br>
            </div>

            <button id="getCoordinatesButton">Neue Toilette</button>
            </div>
        </div>



    </div>
</div>

<script>
    const accessToken = 'pk.eyJ1Ijoic3RlaW5icmluZyIsImEiOiJja2t1YjE3ZXEwZ3R0MnBqdWo2cHRkOW5sIn0.OEPMk0xJ6j2zIq1zZN9yMg';

    document.getElementById('getCoordinatesButton').addEventListener('click', () => {
        const address = document.getElementById('addressInput').value;

        if (document.getElementById('Toilettenname').value.trim() === ""){
            alert("Bitte gib einen gültigen Namen ein")
            return;
        }
        if(address === ""){
            alert("Bitte gib eine gültige Adresse ein")
            return;
        }



        getCoordinates(address)
            .then(coordinates => {

                fetch("/backend-endpoint", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        lat: coordinates.latitude,
                        long: coordinates.longitude,
                        name: document.getElementById('Toilettenname').value,
                        description: document.getElementById('Description').value,
                        type: getType()
                    })
                }).then((response) => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                    .then((data) => {
                        console.log("Response data:", data);
                    })
                    .catch((error) => {
                        console.error("Error:", error);
                    });

            })
            .catch(error => {
                console.error(error);
            });

        alert("Die Toilette wurde hinzugefügt");
    });

    async function getCoordinates(address) {


        const baseURL = "https://api.mapbox.com/geocoding/v5/mapbox.places/";
        const encodedAddress = encodeURIComponent(address);
        const midTerm = ".json?access_token="

        const url = baseURL + encodedAddress + midTerm + accessToken;

        try {
            const response = await fetch(url);
            const data = await response.json();

            if (data.features.length > 0) {
                const location = data.features[0].center;
                return {
                    latitude: location[1],
                    longitude: location[0]
                };
            } else {
                    throw new Error("Unable to geocode address: " + address);
            }
        } catch (error) {
            throw error;
        }
    }

    function getType() {

        let arr = []

        if(document.getElementById("Male").checked){
            arr.push("Male")
        }
        if(document.getElementById("Female").checked){
            arr.push("Female")
        }
        if(document.getElementById("FLINTA").checked){
            arr.push("FLINTA")
        }

        if(arr.length <1){
            arr.push("Female")
        }

        return arr;
    }

</script>
</body>
</html>