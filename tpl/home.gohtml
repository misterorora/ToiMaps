<!DOCTYPE html>
<html>
<head>
    <meta charset=utf-8 />
    <title>Home Toimaps</title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <script src='https://api.mapbox.com/mapbox.js/v3.3.1/mapbox.js'></script>
    <link href='https://api.mapbox.com/mapbox.js/v3.3.1/mapbox.css' rel='stylesheet' />
    <style>
        body { margin:0; padding:0; }
        #map { position:absolute; bottom:0; left: 25%; width: 75%; height: 90%;}
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            max-width: 100%;
        }
        #header {
            display: inline;
            align-content: center;
            position: absolute;
            justify-content: end;
            align-items: center;
            width: 100%;
            height: 10%;
            background-color: #693b54;
            opacity: 0.75;
        }

        .nav {
            display: inline-flex;
            align-content: flex-end;
            justify-content: flex-end;
            gap: 50px;
            margin-top: 8px;
            margin-right: 5%;
            list-style-type: none;
            top: 5%;
            padding-top: 1%;
        }

        .nav2 {
            display: inline;
            align-content: flex-start;
            justify-content: flex-start;
            gap: 50px;
            margin-top: 8px;
            margin-right: 5%;
            list-style-type: none;
            top: 5%;
            padding-top: 1%;
            padding-left: 10px;
        }


        .nav li a {
            text-decoration: none;
            font-family: 'Classico', sans-serif;
            color: mintcream;
            font-size: 1.8rem;
        }
        #under {
            display: flex;
            width: 100%;
            height: 100%;
        }
        #leftPart {
            display: block;
            left: 0px;
            position: absolute;
            align-content: center;
            top: 10%;
            width: 25%;
            height: 90%;
            background-color: rgb(255, 255, 255);
        }
        #button {
            background-color: #4CAF50; /* Green */
            border: none;
            color: white;
            padding: 15px 32px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            cursor: pointer;
        }
        #commenting {
            background-color: #4CAF50; /* Green */
            border: none;
            color: white;
            padding: 15px 32px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            cursor: pointer;
        }
        #DataAndComment {
            background-color: #adadad;
            visibility: hidden;
        }
        .listing {
            border: 2px solid white;
            display: flex;
            width: 90%;
            height: auto;
            box-sizing: border-box;
            margin-top: 10px;
            margin-bottom: 10px;
            background-color: white;
        }
        #pos {
            background-color: #4CAF50; /* Green */
            border: none;
            color: white;
            padding: 15px 32px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            cursor: pointer;
        }
        #toilette {
            background-color: #4CAF50; /* Green */
            border: none;
            color: white;
            padding: 15px 32px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            cursor: pointer;

        }

    </style>
</head>

<body>

<div id='canva'>
    <div id="header">
        <img src="/visual/Logo.png" alt="Logo" style="height: 50px; margin-left: 10px; margin-top: 1%;">
        <h1 class="nav2">ToiMaps</h1>
        <ul class="nav">
            <li><a href="/home">Home</a></li>
            <li><a href="/about">About</a></li>
            <li><a href="/service">Services</a></li>
            <li><a href="/contact">Contact</a></li>
        </ul>
    </div>


    <div id='under'>
        <div id='leftPart'>
            <form style="padding-left: 10px; font-size: 25px; line-height: 40px;">
                <input type="checkbox" name="Male" title="Male" value="Male" id="Male">
                <label for="Male">Male</label><br>
                <input type="checkbox" name="Female" title="Female" value="Female" id="Female">
                <label for="Female">Female &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label><button type="button" name="button" id="button">Filter</button><br>
                <input type="checkbox" name="FLINTA" title="FLINTA" value="FLINTA" id="FLINTA">
                <label for="FLINTA">FLINTA</label><br>
            </form>
            <br><hr>
            <div style="padding-left: 10px; font-size: 22px; line-height: 40px;">
                <label for="eigenerStandort">Gehe zur eigenen Position</label><br>
                <input type="text" name="eigenerStandort" id="eigenerStandort" placeholder="eigener Standort">&nbsp;&nbsp;&nbsp;&nbsp;<button type="button" name="pos" id="pos">Position</button>
            </div>
            <br><hr>
            <div id="DataAndComment" style="padding-left: 10px; font-size: 25px; line-height: 40px;">
                <label for="Name">Name:</label>
                <output type="text" id="Name" name="Name" style="height: 30px;"></output><br>
                <label for="description">Beschreibung:</label> <br>
                <output type="text" id="description" name="description" style="height: 30px;"></output><br>
                <label for="Comment">Rezension:</label><br>
                <textarea id="myTextarea" name="Comment"  cols="45" rows="5" placeholder="Rezension" style="resize: none;" maxlength="150"></textarea>
                <button type="button" name="commenting" id="commenting">Rezension hinzuf√ºgen</button><br>
                <label for="Rezensionen">Rezensionen: </label><br>
                <div id="rezensionen" name="Rezensionen" style="overflow: auto; height: 200px; font-size: 20px;">
                </div>
            </div>
            <div>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="/service"><button type="button" id="toilette" name="toilette">Neue Toilette</button></a>
            </div>
        </div>

        <div id='map'></div>

    </div>
</div>
<script>

    var currentLat;
    var currentLong;
    var currentName;

    var marker;



    var geojson = {{.geo}}
        L.mapbox.accessToken = 'pk.eyJ1Ijoib3JvcmFzdHVkIiwiYSI6ImNsbWFjYWdudTBhenYzZnB4MWRxOTQyZmgifQ.xGK5egvW3iqFN6F9zNDjFg';
    var map = L.mapbox.map('map')
        .setView([52.516514825737175, 13.380956275053023], 7)
        .addLayer(L.mapbox.styleLayer('mapbox://styles/mapbox/streets-v11'))

    var myFeatureLayer = L.mapbox.featureLayer(geojson)
        .addTo(map);

    myFeatureLayer.eachLayer(function (marker) {
        marker.on('click', function () {
            var emptyPopup = L.popup().setContent('');
            marker.bindPopup(emptyPopup).openPopup();
            handleMarkerClick(marker);
            return false
        })

    })

    function handleMarkerClick(marker) {
        while( document.getElementById('rezensionen').firstChild){
            document.getElementById('rezensionen').removeChild( document.getElementById('rezensionen').firstChild)
        }

        document.getElementById('DataAndComment').style.visibility = 'visible';
        currentLong = marker.feature.geometry.coordinates[0];
        currentLat = marker.feature.geometry.coordinates[1];
        let selectedMarker = marker.feature.properties;
        currentName = selectedMarker.name;
        document.getElementById('Name').textContent = selectedMarker.name;
        document.getElementById('description').textContent = selectedMarker.description;

        var recension = selectedMarker.recension;

        recension.forEach(function (item) {
            var listing = document.createElement('output');
            listing.type = 'text';
            listing.setAttribute('readonly', true);
            listing.value = item;
            listing.classList.add('listing');
            document.getElementById('rezensionen').appendChild(listing);
        });
    }




    async function getCoordinates(address) {

        const token = 'pk.eyJ1Ijoic3RlaW5icmluZyIsImEiOiJja2t1YjE3ZXEwZ3R0MnBqdWo2cHRkOW5sIn0.OEPMk0xJ6j2zIq1zZN9yMg';
        const baseURL = "https://api.mapbox.com/geocoding/v5/mapbox.places/";
        const encodedAddress = encodeURIComponent(address);
        const midTerm = ".json?access_token="

        const url = baseURL + encodedAddress + midTerm + token;

        try {
            const response = await fetch(url);
            const data = await response.json();

            if (data.features.length > 0) {
                const location = data.features[0].center;
                return {
                    latitude: location[1],
                    longitude: location[0]
                };
            } else {
                throw new Error("Unable to geocode address: " + address);
            }
        } catch (error) {
            throw error;
        }
    }

    document.getElementById('pos').addEventListener('click', () => {
        const address = document.getElementById('eigenerStandort').value;

        if (marker) {
            map.removeLayer(marker);
        }

        getCoordinates(address)
            .then(coordinates => {
                map.setView([coordinates.latitude, coordinates.longitude], 15);
                marker = L.marker([coordinates.latitude, coordinates.longitude], {"marker-color": "#0020fd"}).addTo(map);
            })
            .catch(error => {
                console.error(error);
            });
    })


    document.getElementById('button').addEventListener('click', () => {


        const male = document.getElementById("Male").checked;
        const female = document.getElementById("Female").checked;
        const flinta = document.getElementById("FLINTA").checked;

        var filter = function (features) {
            return true;
        }

        if (male) {
            if (female) {
                if (flinta) {
                    filter = function (features) {
                        return true;
                    }
                } else {
                    // male and female are true, flinta is false
                    filter = function (features) {
                        return !features.properties.type.includes('FLINTA');
                    }
                }
            } else {
                if (flinta) {
                    // male and flinta are true, female is false
                    filter = function (features) {
                        return !features.properties.type.includes('Female');
                    }
                } else {
                    // male is true, female and flinta are false
                    filter = function (features) {
                        return features.properties.type.includes('Male');
                    }
                }
            }
        } else {
            if (female) {
                if (flinta) {
                    // female and flinta are true, male is false
                    filter = function (features) {
                        return !features.properties.type.includes('Male');
                    }

                } else {
                    // female is true, male and flinta are false
                    filter = function (features) {
                        return features.properties.type.includes('Female');
                    }
                }
            } else {
                if (flinta) {
                    // flinta is true, male and female are false
                    filter = function (features) {
                        return features.properties.type.includes('FLINTA');
                    }
                } else {
                    filter = function (features) {
                        return true;
                    }
                }
            }

        }
        myFeatureLayer.setFilter(filter)

        myFeatureLayer.eachLayer(function (marker) {
            marker.on('click', function () {
                var emptyPopup = L.popup().setContent('');
                marker.bindPopup(emptyPopup).openPopup();
                handleMarkerClick(marker);
                return false
            })

        })


    })

    document.getElementById('commenting').addEventListener('click', ()=> {

        var comment = document.getElementById("myTextarea").value

        if(comment.trim() === "") {
            alert("Bitte gib etwas in das Rezensionen-Feld ein");
            return
        }

        fetch("/comment-endpoint", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                lat: currentLat,
                long: currentLong,
                name: currentName,
                comment: document.getElementById("myTextarea").value
            })
        }).then((response) => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
            .then((data) => {
                console.log("Response data:", data);
            })
            .catch((error) => {
                console.error("Error:", error);
            });
    })

</script>

</body>
</html>

